[{"D:\\Projects\\MCKINLEY\\electron-app\\src\\index.js":"1","D:\\Projects\\MCKINLEY\\electron-app\\src\\reportWebVitals.js":"2","D:\\Projects\\MCKINLEY\\electron-app\\src\\App.js":"3","D:\\Projects\\MCKINLEY\\electron-app\\src\\api_services\\urls.js":"4","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Login\\Login.jsx":"5","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Main\\TodoDrawer.jsx":"6","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Signup\\Signup.jsx":"7","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Landing\\Landing.jsx":"8","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Main\\card.jsx":"9","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Todo\\AddTodo.jsx":"10","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Category\\AddCategory.jsx":"11"},{"size":652,"mtime":1607018960482,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1876,"mtime":1607018771491,"results":"15","hashOfConfig":"13"},{"size":567,"mtime":1607025694627,"results":"16","hashOfConfig":"13"},{"size":4378,"mtime":1607041396507,"results":"17","hashOfConfig":"13"},{"size":18609,"mtime":1607043453814,"results":"18","hashOfConfig":"13"},{"size":4560,"mtime":1607041532813,"results":"19","hashOfConfig":"13"},{"size":1738,"mtime":1607018706709,"results":"20","hashOfConfig":"13"},{"size":5733,"mtime":1607041069223,"results":"21","hashOfConfig":"13"},{"size":5720,"mtime":1607041246983,"results":"22","hashOfConfig":"13"},{"size":1859,"mtime":1607041828017,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"3wmuji",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"D:\\Projects\\MCKINLEY\\electron-app\\src\\index.js",[],["51","52"],"D:\\Projects\\MCKINLEY\\electron-app\\src\\reportWebVitals.js",[],"D:\\Projects\\MCKINLEY\\electron-app\\src\\App.js",["53","54","55","56","57","58"],"import React, { Fragment } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { apiURLs } from \"./api_services/urls\";\nimport moment from \"moment\";\nimport Push from \"push.js\";\nimport axios from \"axios\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport TodoDrawer from \"./components/Main/TodoDrawer\";\nimport Login from \"./components/Login/Login\";\nimport Signup from \"./components/Signup/Signup\";\nimport Landing from \"./components/Landing/Landing\";\nimport Cookies from \"js-cookie\";\n\nfunction PrivateRoute({ component: Component, authed, path, ...rest }) {\n  console.log(\"authenprovate\", authed);\n  return (\n    <Route\n      exact\n      render={(props) =>\n        authed === true ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect to=\"/\" />\n        )\n      }\n    />\n  );\n}\n\nfunction App() {\n  const is_login = Cookies.get(\"is_login\");\n  const [category, setCategory] = React.useState([\"General\"]);\n  console.log(\"is_login\", !!is_login);\n  React.useEffect(() => {\n    if (!localStorage.getItem(\"category\") == null)\n      setCategory(localStorage.getItem(\"category\"));\n    else localStorage.setItem(\"category\", category);\n  }, []);\n\n  return (\n    <Router>\n      <Fragment>\n        <Route exact path=\"/\" component={Landing}></Route>\n        <section className=\"container\">\n          <Switch>\n            <Route exact path=\"/signup\" component={Signup}></Route>\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => <Login {...props} />}\n            ></Route>\n            <PrivateRoute\n              exact\n              path=\"/todo\"\n              authed={!!is_login}\n              component={TodoDrawer}\n            ></PrivateRoute>\n          </Switch>\n        </section>\n      </Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Projects\\MCKINLEY\\electron-app\\src\\api_services\\urls.js",[],"D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Login\\Login.jsx",["59","60","61","62","63"],"D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Main\\TodoDrawer.jsx",["64","65","66","67","68","69","70","71","72","73","74","75","76"],"D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Signup\\Signup.jsx",["77"],"D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Landing\\Landing.jsx",["78","79","80","81","82","83","84"],"import React, { Fragment, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // display: \"flex\",\r\n        color: \"gray\",\r\n        height: '100vh',\r\n        justifyContent: \"center\",\r\n        backgroundImage: `URL(\"todoBack.jpg\")`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover'\r\n    },\r\n    signup:{\r\n        display:'flex',\r\n        justifyContent:\"center\",\r\n        textDecoration:\"none\",\r\n        paddingTop:\"1%\"\r\n\r\n    },\r\n    login:{\r\n        display:'flex',\r\n        justifyContent:\"center\",\r\n        paddingTop:\"35%\",\r\n\r\n    }\r\n\r\n\r\n})\r\n)\r\n\r\nfunction Landing() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid item xs={12} sm={12}>\r\n            <Box  className={classes.login}>\r\n                    <Link to=\"/login\" style={{textDecoration:\"none\"}}>\r\n                        <Button variant=\"outlined\" color=\"primary\">Login </Button>\r\n                    </Link>\r\n\r\n                </Box>\r\n\r\n                <Box className={classes.signup}>\r\n                    <Link to=\"/signup\" style={{textDecoration:\"none\"}}>\r\n                        <Button variant=\"outlined\" color=\"primary\">Signup</Button>\r\n                    </Link>\r\n                </Box>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Landing;","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Main\\card.jsx",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Todo\\AddTodo.jsx",["101","102","103"],"import React, { Fragment } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport moment, { isMoment } from \"moment\";\r\n\r\nimport axios from \"axios\";\r\nimport { apiURLs } from \"../../api_services/urls\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function AddTodo({ open, onClose, addTask, categories }) {\r\n  const [category, setCategory] = React.useState(\"category\");\r\n  const [todoItem, setTodoItem] = React.useState(\"\");\r\n  const [dateTime, setDateTime] = React.useState(moment(Date()).format(\"YYYY-MM-DDTHH:mm\"));\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [loader,setLoader] = React.useState(false); \r\n\r\n  const formData = {\r\n    name: \"\",\r\n    category: \"\",\r\n    date: \"\",\r\n    description: \"\",\r\n  };\r\n  const [todoForm, setTodoForm] = React.useState({\r\n    ...formData,\r\n  });\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleTodoItem = (e) => {\r\n    setTodoItem(e.target.value);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const handleTimeChange = (e) => {\r\n    setDateTime(moment(e.target.value).format(\"DD-MM-YYYY HH:mm\"));\r\n  };\r\n\r\n  const handleDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    \r\n    if (!todoItem)\r\n      return enqueueSnackbar(\"Please Add Todo Item Name\", { variant: \"info\" });\r\n    if (!dateTime)\r\n      return enqueueSnackbar(\"Please Select Date and Time to Notify\", {\r\n        variant: \"info\",\r\n      });\r\n    if (category === \"category\")\r\n      return enqueueSnackbar(\"Please Select Category\", { variant: \"info\" });\r\n    if (!description)\r\n      return enqueueSnackbar(\"Please Add Todo Item Description\", {\r\n        variant: \"info\",\r\n      });\r\n\r\n    let data = {\r\n      name: todoItem,\r\n      category: category,\r\n      date: dateTime,\r\n      description: description,\r\n    };\r\n    setLoader(true);\r\n    setTodoForm({\r\n      ...data,\r\n    });\r\n    const params = JSON.stringify({\r\n      ...data,\r\n    });\r\n    await axios\r\n      .post(apiURLs.createTask(), params, {\r\n        headers: {\r\n          Authorization: `Bearer ${Cookies.get(\"token\")}`,\r\n          \"content-type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          addTask(res.data.data);\r\n          setTodoForm({...formData});\r\n          enqueueSnackbar(\"Todo Added Successfully\", { variant: \"success\" });\r\n        }\r\n        console.log(res);\r\n        // console.log(res);\r\n      })\r\n      .catch((e) => {\r\n        enqueueSnackbar(\"Failed to Add Todo\", { variant: \"error\" });\r\n      });\r\n\r\n    // console.log(data)\r\n    setLoader(false);\r\n    onClose();\r\n    \r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        aria-labelledby=\"add-todo-title\"\r\n      >\r\n        <DialogTitle id=\"add-todo-title\">Add Your Todo</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                name=\"todoField\"\r\n                label=\"Todo Item Name\"\r\n                type=\"text\"\r\n                onChange={handleTodoItem}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                id=\"time\"\r\n                label=\"Notify Me\"\r\n                type=\"datetime-local\"\r\n                defaultValue={moment(Date()).format(\"YYYY-MM-DDTHH:mm\")}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n                onChange={handleTimeChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel id=\"categorySelect\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"categorySelect\"\r\n                id=\"CategorySelect\"\r\n                value={category}\r\n                name=\"category\"\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={\"category\"}>Select Category</MenuItem>\r\n                {categories.map(function (currValue) {\r\n                  return <MenuItem value={currValue}> {currValue} </MenuItem>;\r\n                })}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                type=\"text\"\r\n                onChange={handleDescription}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          {!loader?\r\n            <Button onClick={handleSubmit} variant={\"contained\"} color=\"primary\">\r\n              Add Todo\r\n            </Button>:<CircularProgress />\r\n          }\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment> \r\n  );\r\n}\r\n","D:\\Projects\\MCKINLEY\\electron-app\\src\\components\\Category\\AddCategory.jsx",["104","105","106"],"import React,{Fragment, useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useSnackbar } from 'notistack';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\n\r\nexport default function AddCategory({open,onClose,handleSubmitCategory}) {\r\n  const [category,setCategory]= React.useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loader,setLoader] = useState(false);\r\n\r\n   const handleCategory=(e)=>{\r\n    let data= e.target.value;\r\n    setCategory(data)\r\n  }\r\n  const handleSubmit = async () =>{\r\n    if(category==\"\") return enqueueSnackbar(\"Please Add Category\", {variant:\"info\"});\r\n    setLoader(true);\r\n    await handleSubmitCategory(category); \r\n    setLoader(false);\r\n    onClose();\r\n \r\n  }\r\n  return (\r\n    <Fragment>\r\n     <Dialog open={open}  onClose={onClose} fullWidth maxWidth=\"sm\" aria-labelledby=\"add-todo-title\">\r\n        <DialogTitle id=\"add-category\">Add Category</DialogTitle>\r\n        <DialogContent>\r\n       \r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                name=\"addCategory\"\r\n                type=\"text\"\r\n                onChange={handleCategory}\r\n                fullWidth\r\n            />\r\n        \r\n        \r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n       \r\n          {loader?\r\n            <CircularProgress />\r\n          :<Button onClick={handleSubmit} color=\"primary\">\r\n            Add\r\n          </Button>}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":8,"column":10,"nodeType":"113","messageId":"114","endLine":8,"endColumn":17},{"ruleId":"111","severity":1,"message":"115","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":12},{"ruleId":"111","severity":1,"message":"117","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":13},{"ruleId":"111","severity":1,"message":"118","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":12},{"ruleId":"119","severity":1,"message":"120","line":45,"column":6,"nodeType":"121","endLine":45,"endColumn":8,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"123","line":6,"column":22,"nodeType":"113","messageId":"114","endLine":6,"endColumn":30},{"ruleId":"111","severity":1,"message":"124","line":50,"column":11,"nodeType":"113","messageId":"114","endLine":50,"endColumn":19},{"ruleId":"111","severity":1,"message":"125","line":50,"column":21,"nodeType":"113","messageId":"114","endLine":50,"endColumn":31},{"ruleId":"111","severity":1,"message":"126","line":50,"column":33,"nodeType":"113","messageId":"114","endLine":50,"endColumn":37},{"ruleId":"111","severity":1,"message":"127","line":52,"column":9,"nodeType":"113","messageId":"114","endLine":52,"endColumn":20},{"ruleId":"111","severity":1,"message":"128","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},{"ruleId":"111","severity":1,"message":"129","line":14,"column":8,"nodeType":"113","messageId":"114","endLine":14,"endColumn":16},{"ruleId":"111","severity":1,"message":"130","line":19,"column":8,"nodeType":"113","messageId":"114","endLine":19,"endColumn":19},{"ruleId":"111","severity":1,"message":"131","line":21,"column":8,"nodeType":"113","messageId":"114","endLine":21,"endColumn":19},{"ruleId":"111","severity":1,"message":"132","line":39,"column":3,"nodeType":"113","messageId":"114","endLine":39,"endColumn":13},{"ruleId":"111","severity":1,"message":"133","line":40,"column":3,"nodeType":"113","messageId":"114","endLine":40,"endColumn":9},{"ruleId":"111","severity":1,"message":"134","line":41,"column":3,"nodeType":"113","messageId":"114","endLine":41,"endColumn":13},{"ruleId":"111","severity":1,"message":"135","line":45,"column":10,"nodeType":"113","messageId":"114","endLine":45,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":126,"column":27,"nodeType":"138","messageId":"139","endLine":126,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":191,"column":24,"nodeType":"142","messageId":"143","endLine":191,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":252,"column":24,"nodeType":"142","messageId":"143","endLine":252,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":337,"column":14,"nodeType":"113","messageId":"146","endLine":337,"endColumn":15},{"ruleId":"111","severity":1,"message":"147","line":504,"column":9,"nodeType":"113","messageId":"114","endLine":504,"endColumn":18},{"ruleId":"111","severity":1,"message":"148","line":1,"column":37,"nodeType":"113","messageId":"114","endLine":1,"endColumn":46},{"ruleId":"111","severity":1,"message":"149","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"150","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":35},{"ruleId":"111","severity":1,"message":"151","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":17},{"ruleId":"111","severity":1,"message":"123","line":5,"column":22,"nodeType":"113","messageId":"114","endLine":5,"endColumn":30},{"ruleId":"111","severity":1,"message":"152","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":18},{"ruleId":"111","severity":1,"message":"153","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":23},{"ruleId":"111","severity":1,"message":"154","line":7,"column":25,"nodeType":"113","messageId":"114","endLine":7,"endColumn":30},{"ruleId":"111","severity":1,"message":"155","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":19},{"ruleId":"111","severity":1,"message":"152","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":18},{"ruleId":"111","severity":1,"message":"156","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":18},{"ruleId":"111","severity":1,"message":"157","line":17,"column":3,"nodeType":"113","messageId":"114","endLine":17,"endColumn":6},{"ruleId":"111","severity":1,"message":"158","line":18,"column":3,"nodeType":"113","messageId":"114","endLine":18,"endColumn":7},{"ruleId":"111","severity":1,"message":"159","line":19,"column":3,"nodeType":"113","messageId":"114","endLine":19,"endColumn":7},{"ruleId":"111","severity":1,"message":"160","line":20,"column":3,"nodeType":"113","messageId":"114","endLine":20,"endColumn":8},{"ruleId":"111","severity":1,"message":"161","line":21,"column":3,"nodeType":"113","messageId":"114","endLine":21,"endColumn":9},{"ruleId":"111","severity":1,"message":"162","line":22,"column":3,"nodeType":"113","messageId":"114","endLine":22,"endColumn":9},{"ruleId":"111","severity":1,"message":"132","line":23,"column":3,"nodeType":"113","messageId":"114","endLine":23,"endColumn":13},{"ruleId":"111","severity":1,"message":"133","line":24,"column":3,"nodeType":"113","messageId":"114","endLine":24,"endColumn":9},{"ruleId":"111","severity":1,"message":"134","line":25,"column":3,"nodeType":"113","messageId":"114","endLine":25,"endColumn":13},{"ruleId":"111","severity":1,"message":"163","line":26,"column":3,"nodeType":"113","messageId":"114","endLine":26,"endColumn":7},{"ruleId":"164","severity":1,"message":"165","line":35,"column":5,"nodeType":"166","messageId":"143","endLine":35,"endColumn":20},{"ruleId":"140","severity":1,"message":"167","line":114,"column":24,"nodeType":"142","messageId":"143","endLine":114,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":145,"column":24,"nodeType":"142","messageId":"143","endLine":145,"endColumn":26},{"ruleId":"111","severity":1,"message":"168","line":12,"column":18,"nodeType":"113","messageId":"114","endLine":12,"endColumn":26},{"ruleId":"111","severity":1,"message":"169","line":33,"column":10,"nodeType":"113","messageId":"114","endLine":33,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":91,"column":24,"nodeType":"142","messageId":"143","endLine":91,"endColumn":26},{"ruleId":"111","severity":1,"message":"148","line":1,"column":25,"nodeType":"113","messageId":"114","endLine":1,"endColumn":34},{"ruleId":"111","severity":1,"message":"170","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":23,"column":16,"nodeType":"142","messageId":"143","endLine":23,"endColumn":18},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'apiURLs' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'Push' is defined but never used.","'axios' is defined but never used.","'logo' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'useTheme' is defined but never used.","'vertical' is assigned a value but never used.","'horizontal' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'PropTypes' is defined but never used.","'MailIcon' is defined but never used.","'WbSunnyIcon' is defined but never used.","'DoneAllIcon' is defined but never used.","'deepOrange' is defined but never used.","'purple' is defined but never used.","'deepPurple' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'container' is assigned a value but never used.","'useEffect' is defined but never used.","'Fragment' is defined but never used.","'useState' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'CardActions' is defined but never used.","'classNames' is defined but never used.","'red' is defined but never used.","'pink' is defined but never used.","'blue' is defined but never used.","'green' is defined but never used.","'yellow' is defined but never used.","'orange' is defined but never used.","'cyan' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","Expected '!==' and instead saw '!='.","'isMoment' is defined but never used.","'todoForm' is assigned a value but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [category]",{"range":"176","text":"177"},[1227,1229],"[category]"]